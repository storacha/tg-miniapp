# storoku:ignore
name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}

  # apply staging on pushes to main, plan otherwise
  staging:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    uses: ./.github/workflows/terraform.yml
    with:
      env: staging
      workspace: staging
      did: did:key:z6MkktP6Lpud8UQgkQhKjPdSHqnphXU3v7vityVULXxiNf8M
      apply: ${{ github.event_name != 'pull_request' }}
    secrets:
      aws-account-id: ${{ secrets.STAGING_AWS_ACCOUNT_ID }}
      aws-region: ${{ secrets.STAGING_AWS_REGION }}
      region: ${{ secrets.STAGING_AWS_REGION }}
      private-key: ${{ secrets.STAGING_PRIVATE_KEY }}
      telegram-bot-token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      next-public-telegram-api-id: ${{ secrets.TELEGRAM_API_ID }}
      next-public-telegram-api-hash: ${{ secrets.TELEGRAM_API_HASH }}
      next-public-humanode-auth-url: ${{ secrets.HUMANODE_AUTH_URL }}
      next-public-humanode-oauth-callback-url: ${{ secrets.HUMANODE_OAUTH_CALLBACK_URL }}
      next-public-humanode-client-id: ${{ secrets.HUMANODE_CLIENT_ID }} 
      cloudflare-zone-id: ${{ secrets.STAGING_CLOUDFLARE_ZONE_ID }}
      cloudflare-api-token: ${{ secrets.STAGING_CLOUDFLARE_API_TOKEN }}
      sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}

  # apply prod on successful release, plan otherwise
  production:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    needs: release
    uses: ./.github/workflows/terraform.yml
    with:
      env: production
      workspace: prod
      did: did:key:z6MkfxCqc9VKQViCSPHJ7xCd5vx1eeaXvGhdS8oRi1xkgsvE
      apply: ${{ needs.release.outputs.release_created == 'true' }}
    secrets:
      aws-account-id: ${{ secrets.PROD_AWS_ACCOUNT_ID }}
      aws-region: ${{ secrets.PROD_AWS_REGION }}
      region: ${{ secrets.PROD_AWS_REGION }}
      private-key: ${{ secrets.PROD_PRIVATE_KEY }}
      telegram-bot-token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      next-public-telegram-api-id: ${{ secrets.TELEGRAM_API_ID }}
      next-public-telegram-api-hash: ${{ secrets.TELEGRAM_API_HASH }}
      next-public-humanode-auth-url: ${{ secrets.HUMANODE_AUTH_URL }}
      next-public-humanode-oauth-callback-url: ${{ secrets.HUMANODE_OAUTH_CALLBACK_URL }}
      next-public-humanode-client-id: ${{ secrets.HUMANODE_CLIENT_ID }}
      cloudflare-zone-id: ${{ secrets.PROD_CLOUDFLARE_ZONE_ID }}
      cloudflare-api-token: ${{ secrets.PROD_CLOUDFLARE_API_TOKEN }}
      sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}